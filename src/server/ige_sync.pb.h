// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ige_sync.proto

#ifndef PROTOBUF_ige_5fsync_2eproto__INCLUDED
#define PROTOBUF_ige_5fsync_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ige {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ige_5fsync_2eproto();
void protobuf_AssignDesc_ige_5fsync_2eproto();
void protobuf_ShutdownFile_ige_5fsync_2eproto();

class Command;
class Login;
class LoginSuccess;
class SetFlag;
class SendEpoch;
class Timestamp;
class Geometry;
class Entity;
class Item;
class Sync;

enum Command_command_type {
  Command_command_type_SHUTDOWN = 0
};
bool Command_command_type_IsValid(int value);
const Command_command_type Command_command_type_command_type_MIN = Command_command_type_SHUTDOWN;
const Command_command_type Command_command_type_command_type_MAX = Command_command_type_SHUTDOWN;
const int Command_command_type_command_type_ARRAYSIZE = Command_command_type_command_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Command_command_type_descriptor();
inline const ::std::string& Command_command_type_Name(Command_command_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Command_command_type_descriptor(), value);
}
inline bool Command_command_type_Parse(
    const ::std::string& name, Command_command_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Command_command_type>(
    Command_command_type_descriptor(), name, value);
}
// ===================================================================

class Command : public ::google::protobuf::Message {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  Command* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Command_command_type command_type;
  static const command_type SHUTDOWN = Command_command_type_SHUTDOWN;
  static inline bool command_type_IsValid(int value) {
    return Command_command_type_IsValid(value);
  }
  static const command_type command_type_MIN =
    Command_command_type_command_type_MIN;
  static const command_type command_type_MAX =
    Command_command_type_command_type_MAX;
  static const int command_type_ARRAYSIZE =
    Command_command_type_command_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  command_type_descriptor() {
    return Command_command_type_descriptor();
  }
  static inline const ::std::string& command_type_Name(command_type value) {
    return Command_command_type_Name(value);
  }
  static inline bool command_type_Parse(const ::std::string& name,
      command_type* value) {
    return Command_command_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ige.Command.command_type command_id = 1;
  inline bool has_command_id() const;
  inline void clear_command_id();
  static const int kCommandIdFieldNumber = 1;
  inline ::ige::Command_command_type command_id() const;
  inline void set_command_id(::ige::Command_command_type value);

  // @@protoc_insertion_point(class_scope:ige.Command)
 private:
  inline void set_has_command_id();
  inline void clear_has_command_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int command_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static Command* default_instance_;
};
// -------------------------------------------------------------------

class Login : public ::google::protobuf::Message {
 public:
  Login();
  virtual ~Login();

  Login(const Login& from);

  inline Login& operator=(const Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login& default_instance();

  void Swap(Login* other);

  // implements Message ----------------------------------------------

  Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Login& from);
  void MergeFrom(const Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string username = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:ige.Login)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* username_;
  ::std::string* password_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static Login* default_instance_;
};
// -------------------------------------------------------------------

class LoginSuccess : public ::google::protobuf::Message {
 public:
  LoginSuccess();
  virtual ~LoginSuccess();

  LoginSuccess(const LoginSuccess& from);

  inline LoginSuccess& operator=(const LoginSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginSuccess& default_instance();

  void Swap(LoginSuccess* other);

  // implements Message ----------------------------------------------

  LoginSuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginSuccess& from);
  void MergeFrom(const LoginSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 login_hash = 1;
  inline bool has_login_hash() const;
  inline void clear_login_hash();
  static const int kLoginHashFieldNumber = 1;
  inline ::google::protobuf::int64 login_hash() const;
  inline void set_login_hash(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ige.LoginSuccess)
 private:
  inline void set_has_login_hash();
  inline void clear_has_login_hash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 login_hash_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static LoginSuccess* default_instance_;
};
// -------------------------------------------------------------------

class SetFlag : public ::google::protobuf::Message {
 public:
  SetFlag();
  virtual ~SetFlag();

  SetFlag(const SetFlag& from);

  inline SetFlag& operator=(const SetFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFlag& default_instance();

  void Swap(SetFlag* other);

  // implements Message ----------------------------------------------

  SetFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFlag& from);
  void MergeFrom(const SetFlag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string flag_name = 1;
  inline bool has_flag_name() const;
  inline void clear_flag_name();
  static const int kFlagNameFieldNumber = 1;
  inline const ::std::string& flag_name() const;
  inline void set_flag_name(const ::std::string& value);
  inline void set_flag_name(const char* value);
  inline void set_flag_name(const char* value, size_t size);
  inline ::std::string* mutable_flag_name();
  inline ::std::string* release_flag_name();
  inline void set_allocated_flag_name(::std::string* flag_name);

  // required bool flag_value = 2;
  inline bool has_flag_value() const;
  inline void clear_flag_value();
  static const int kFlagValueFieldNumber = 2;
  inline bool flag_value() const;
  inline void set_flag_value(bool value);

  // @@protoc_insertion_point(class_scope:ige.SetFlag)
 private:
  inline void set_has_flag_name();
  inline void clear_has_flag_name();
  inline void set_has_flag_value();
  inline void clear_has_flag_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* flag_name_;
  bool flag_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static SetFlag* default_instance_;
};
// -------------------------------------------------------------------

class SendEpoch : public ::google::protobuf::Message {
 public:
  SendEpoch();
  virtual ~SendEpoch();

  SendEpoch(const SendEpoch& from);

  inline SendEpoch& operator=(const SendEpoch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendEpoch& default_instance();

  void Swap(SendEpoch* other);

  // implements Message ----------------------------------------------

  SendEpoch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendEpoch& from);
  void MergeFrom(const SendEpoch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sec = 1;
  inline bool has_sec() const;
  inline void clear_sec();
  static const int kSecFieldNumber = 1;
  inline ::google::protobuf::int32 sec() const;
  inline void set_sec(::google::protobuf::int32 value);

  // required int32 min = 2;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 2;
  inline ::google::protobuf::int32 min() const;
  inline void set_min(::google::protobuf::int32 value);

  // required int32 hour = 3;
  inline bool has_hour() const;
  inline void clear_hour();
  static const int kHourFieldNumber = 3;
  inline ::google::protobuf::int32 hour() const;
  inline void set_hour(::google::protobuf::int32 value);

  // required int32 day = 4;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 4;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // required int32 mon = 5;
  inline bool has_mon() const;
  inline void clear_mon();
  static const int kMonFieldNumber = 5;
  inline ::google::protobuf::int32 mon() const;
  inline void set_mon(::google::protobuf::int32 value);

  // required int32 year = 6;
  inline bool has_year() const;
  inline void clear_year();
  static const int kYearFieldNumber = 6;
  inline ::google::protobuf::int32 year() const;
  inline void set_year(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ige.SendEpoch)
 private:
  inline void set_has_sec();
  inline void clear_has_sec();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_hour();
  inline void clear_has_hour();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_mon();
  inline void clear_has_mon();
  inline void set_has_year();
  inline void clear_has_year();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sec_;
  ::google::protobuf::int32 min_;
  ::google::protobuf::int32 hour_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 mon_;
  ::google::protobuf::int32 year_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static SendEpoch* default_instance_;
};
// -------------------------------------------------------------------

class Timestamp : public ::google::protobuf::Message {
 public:
  Timestamp();
  virtual ~Timestamp();

  Timestamp(const Timestamp& from);

  inline Timestamp& operator=(const Timestamp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Timestamp& default_instance();

  void Swap(Timestamp* other);

  // implements Message ----------------------------------------------

  Timestamp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Timestamp& from);
  void MergeFrom(const Timestamp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ige.Timestamp)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static Timestamp* default_instance_;
};
// -------------------------------------------------------------------

class Geometry : public ::google::protobuf::Message {
 public:
  Geometry();
  virtual ~Geometry();

  Geometry(const Geometry& from);

  inline Geometry& operator=(const Geometry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Geometry& default_instance();

  void Swap(Geometry* other);

  // implements Message ----------------------------------------------

  Geometry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Geometry& from);
  void MergeFrom(const Geometry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ige.Geometry)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static Geometry* default_instance_;
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  void Swap(Entity* other);

  // implements Message ----------------------------------------------

  Entity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ige.Entity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static Entity* default_instance_;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ige.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class Sync : public ::google::protobuf::Message {
 public:
  Sync();
  virtual ~Sync();

  Sync(const Sync& from);

  inline Sync& operator=(const Sync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sync& default_instance();

  void Swap(Sync* other);

  // implements Message ----------------------------------------------

  Sync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sync& from);
  void MergeFrom(const Sync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ige.Geometry geometries = 1;
  inline int geometries_size() const;
  inline void clear_geometries();
  static const int kGeometriesFieldNumber = 1;
  inline const ::ige::Geometry& geometries(int index) const;
  inline ::ige::Geometry* mutable_geometries(int index);
  inline ::ige::Geometry* add_geometries();
  inline const ::google::protobuf::RepeatedPtrField< ::ige::Geometry >&
      geometries() const;
  inline ::google::protobuf::RepeatedPtrField< ::ige::Geometry >*
      mutable_geometries();

  // repeated .ige.Entity entities = 2;
  inline int entities_size() const;
  inline void clear_entities();
  static const int kEntitiesFieldNumber = 2;
  inline const ::ige::Entity& entities(int index) const;
  inline ::ige::Entity* mutable_entities(int index);
  inline ::ige::Entity* add_entities();
  inline const ::google::protobuf::RepeatedPtrField< ::ige::Entity >&
      entities() const;
  inline ::google::protobuf::RepeatedPtrField< ::ige::Entity >*
      mutable_entities();

  // repeated .ige.Item items = 3;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::ige::Item& items(int index) const;
  inline ::ige::Item* mutable_items(int index);
  inline ::ige::Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ige::Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ige::Item >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:ige.Sync)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ige::Geometry > geometries_;
  ::google::protobuf::RepeatedPtrField< ::ige::Entity > entities_;
  ::google::protobuf::RepeatedPtrField< ::ige::Item > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ige_5fsync_2eproto();
  friend void protobuf_AssignDesc_ige_5fsync_2eproto();
  friend void protobuf_ShutdownFile_ige_5fsync_2eproto();

  void InitAsDefaultInstance();
  static Sync* default_instance_;
};
// ===================================================================


// ===================================================================

// Command

// required .ige.Command.command_type command_id = 1;
inline bool Command::has_command_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Command::set_has_command_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Command::clear_has_command_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Command::clear_command_id() {
  command_id_ = 0;
  clear_has_command_id();
}
inline ::ige::Command_command_type Command::command_id() const {
  return static_cast< ::ige::Command_command_type >(command_id_);
}
inline void Command::set_command_id(::ige::Command_command_type value) {
  assert(::ige::Command_command_type_IsValid(value));
  set_has_command_id();
  command_id_ = value;
}

// -------------------------------------------------------------------

// Login

// required string username = 1;
inline bool Login::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Login::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Login::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Login::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& Login::username() const {
  return *username_;
}
inline void Login::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void Login::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void Login::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Login::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* Login::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Login::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string password = 2;
inline bool Login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Login::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Login::password() const {
  return *password_;
}
inline void Login::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Login::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Login::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Login::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* Login::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Login::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LoginSuccess

// required int64 login_hash = 1;
inline bool LoginSuccess::has_login_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginSuccess::set_has_login_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginSuccess::clear_has_login_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginSuccess::clear_login_hash() {
  login_hash_ = GOOGLE_LONGLONG(0);
  clear_has_login_hash();
}
inline ::google::protobuf::int64 LoginSuccess::login_hash() const {
  return login_hash_;
}
inline void LoginSuccess::set_login_hash(::google::protobuf::int64 value) {
  set_has_login_hash();
  login_hash_ = value;
}

// -------------------------------------------------------------------

// SetFlag

// required string flag_name = 1;
inline bool SetFlag::has_flag_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFlag::set_has_flag_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFlag::clear_has_flag_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFlag::clear_flag_name() {
  if (flag_name_ != &::google::protobuf::internal::kEmptyString) {
    flag_name_->clear();
  }
  clear_has_flag_name();
}
inline const ::std::string& SetFlag::flag_name() const {
  return *flag_name_;
}
inline void SetFlag::set_flag_name(const ::std::string& value) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(value);
}
inline void SetFlag::set_flag_name(const char* value) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(value);
}
inline void SetFlag::set_flag_name(const char* value, size_t size) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetFlag::mutable_flag_name() {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  return flag_name_;
}
inline ::std::string* SetFlag::release_flag_name() {
  clear_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = flag_name_;
    flag_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetFlag::set_allocated_flag_name(::std::string* flag_name) {
  if (flag_name_ != &::google::protobuf::internal::kEmptyString) {
    delete flag_name_;
  }
  if (flag_name) {
    set_has_flag_name();
    flag_name_ = flag_name;
  } else {
    clear_has_flag_name();
    flag_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool flag_value = 2;
inline bool SetFlag::has_flag_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetFlag::set_has_flag_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetFlag::clear_has_flag_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetFlag::clear_flag_value() {
  flag_value_ = false;
  clear_has_flag_value();
}
inline bool SetFlag::flag_value() const {
  return flag_value_;
}
inline void SetFlag::set_flag_value(bool value) {
  set_has_flag_value();
  flag_value_ = value;
}

// -------------------------------------------------------------------

// SendEpoch

// required int32 sec = 1;
inline bool SendEpoch::has_sec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendEpoch::set_has_sec() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendEpoch::clear_has_sec() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendEpoch::clear_sec() {
  sec_ = 0;
  clear_has_sec();
}
inline ::google::protobuf::int32 SendEpoch::sec() const {
  return sec_;
}
inline void SendEpoch::set_sec(::google::protobuf::int32 value) {
  set_has_sec();
  sec_ = value;
}

// required int32 min = 2;
inline bool SendEpoch::has_min() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendEpoch::set_has_min() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendEpoch::clear_has_min() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendEpoch::clear_min() {
  min_ = 0;
  clear_has_min();
}
inline ::google::protobuf::int32 SendEpoch::min() const {
  return min_;
}
inline void SendEpoch::set_min(::google::protobuf::int32 value) {
  set_has_min();
  min_ = value;
}

// required int32 hour = 3;
inline bool SendEpoch::has_hour() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendEpoch::set_has_hour() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendEpoch::clear_has_hour() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendEpoch::clear_hour() {
  hour_ = 0;
  clear_has_hour();
}
inline ::google::protobuf::int32 SendEpoch::hour() const {
  return hour_;
}
inline void SendEpoch::set_hour(::google::protobuf::int32 value) {
  set_has_hour();
  hour_ = value;
}

// required int32 day = 4;
inline bool SendEpoch::has_day() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendEpoch::set_has_day() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendEpoch::clear_has_day() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendEpoch::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 SendEpoch::day() const {
  return day_;
}
inline void SendEpoch::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
}

// required int32 mon = 5;
inline bool SendEpoch::has_mon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendEpoch::set_has_mon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendEpoch::clear_has_mon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendEpoch::clear_mon() {
  mon_ = 0;
  clear_has_mon();
}
inline ::google::protobuf::int32 SendEpoch::mon() const {
  return mon_;
}
inline void SendEpoch::set_mon(::google::protobuf::int32 value) {
  set_has_mon();
  mon_ = value;
}

// required int32 year = 6;
inline bool SendEpoch::has_year() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendEpoch::set_has_year() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendEpoch::clear_has_year() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendEpoch::clear_year() {
  year_ = 0;
  clear_has_year();
}
inline ::google::protobuf::int32 SendEpoch::year() const {
  return year_;
}
inline void SendEpoch::set_year(::google::protobuf::int32 value) {
  set_has_year();
  year_ = value;
}

// -------------------------------------------------------------------

// Timestamp

// required int64 time = 1;
inline bool Timestamp::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Timestamp::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Timestamp::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Timestamp::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 Timestamp::time() const {
  return time_;
}
inline void Timestamp::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// Geometry

// required int32 id = 1;
inline bool Geometry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Geometry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Geometry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Geometry::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Geometry::id() const {
  return id_;
}
inline void Geometry::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 x = 2;
inline bool Geometry::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Geometry::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Geometry::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Geometry::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Geometry::x() const {
  return x_;
}
inline void Geometry::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 3;
inline bool Geometry::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Geometry::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Geometry::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Geometry::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Geometry::y() const {
  return y_;
}
inline void Geometry::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Entity

// required int32 id = 1;
inline bool Entity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Entity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Entity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Entity::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Entity::id() const {
  return id_;
}
inline void Entity::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 x = 2;
inline bool Entity::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Entity::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Entity::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Entity::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Entity::x() const {
  return x_;
}
inline void Entity::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 3;
inline bool Entity::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Entity::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Entity::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Entity::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Entity::y() const {
  return y_;
}
inline void Entity::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Item

// required int32 id = 1;
inline bool Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Item::id() const {
  return id_;
}
inline void Item::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 x = 2;
inline bool Item::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Item::x() const {
  return x_;
}
inline void Item::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 3;
inline bool Item::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Item::y() const {
  return y_;
}
inline void Item::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Sync

// repeated .ige.Geometry geometries = 1;
inline int Sync::geometries_size() const {
  return geometries_.size();
}
inline void Sync::clear_geometries() {
  geometries_.Clear();
}
inline const ::ige::Geometry& Sync::geometries(int index) const {
  return geometries_.Get(index);
}
inline ::ige::Geometry* Sync::mutable_geometries(int index) {
  return geometries_.Mutable(index);
}
inline ::ige::Geometry* Sync::add_geometries() {
  return geometries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ige::Geometry >&
Sync::geometries() const {
  return geometries_;
}
inline ::google::protobuf::RepeatedPtrField< ::ige::Geometry >*
Sync::mutable_geometries() {
  return &geometries_;
}

// repeated .ige.Entity entities = 2;
inline int Sync::entities_size() const {
  return entities_.size();
}
inline void Sync::clear_entities() {
  entities_.Clear();
}
inline const ::ige::Entity& Sync::entities(int index) const {
  return entities_.Get(index);
}
inline ::ige::Entity* Sync::mutable_entities(int index) {
  return entities_.Mutable(index);
}
inline ::ige::Entity* Sync::add_entities() {
  return entities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ige::Entity >&
Sync::entities() const {
  return entities_;
}
inline ::google::protobuf::RepeatedPtrField< ::ige::Entity >*
Sync::mutable_entities() {
  return &entities_;
}

// repeated .ige.Item items = 3;
inline int Sync::items_size() const {
  return items_.size();
}
inline void Sync::clear_items() {
  items_.Clear();
}
inline const ::ige::Item& Sync::items(int index) const {
  return items_.Get(index);
}
inline ::ige::Item* Sync::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::ige::Item* Sync::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ige::Item >&
Sync::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ige::Item >*
Sync::mutable_items() {
  return &items_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ige

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ige::Command_command_type>() {
  return ::ige::Command_command_type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ige_5fsync_2eproto__INCLUDED
